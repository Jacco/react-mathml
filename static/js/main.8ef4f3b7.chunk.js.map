{"version":3,"sources":["components/MathML/MathContext.jsx","utils/mathconsts.js","components/MathML/ContentNumber.jsx","components/MathML/ContentIdentifier.jsx","components/MathML/MathOperator.jsx","components/MathML/Generic.jsx","components/MathML/Apply.jsx","components/MathML/Equation.jsx","components/MathML/Division.jsx","components/MathML/Multiplication.jsx","components/MathML/Subtraction.jsx","components/MathML/Addition.jsx","components/MathML/Root.jsx","components/MathML/Power.jsx","components/MathML/ApplyTemplate.jsx","components/MathML.jsx","App.js","serviceWorker.js","index.js"],"names":["MathContext","React","createContext","path","onClick","registerActions","unregisterActions","one","type","idx","children","attributes","zero","IncreaseRational","input","set","parseInt","toString","DecreaseRational","RationalNumber","forwardRef","ref","expr","rest","ctx","useContext","useEffect","actions","numerator","denominator","space","NaturalNumber","IncreaseNatural","DecreaseNatural","p","isSelected","startsWith","selectedPath","console","log","num","style","backgroundColor","map","c","i","key","class","charCodeAt","toUpperCase","JSON","stringify","Refactor_DivideByOne","ContentNumber","variableMap","x","a","b","ContentIdentifier","MathOperator","MF","openSymbol","closeSymbol","Intersperse","useBrackets","priority","symbol","opPath","reduce","v","push","Binary","operands","newPriority","oldPriority","level","Templates","eq","divide","times","o","minus","cnt","length","undefined","plus","j","npath","Number","textContent","root","params","power","base","exponent","useState","va","setVA","baseNode","setBaseNode","superNode","setSuperNode","measureSuper","useCallback","node","measureBase","getBoundingClientRect","height","verticalAlign","size","apply","first","bvars","forEach","nm","C","ci","cn","ApplyTemplate","n","Array","isArray","tp","getPath","mathExpr","split","join","substr","get","setPath","mathmlid","MathML","id","setMathExpr","setSelectedPath","setCtx","Children","only","str","ReactDOMServer","renderToString","eqDoc","DOMParser","parseFromString","querySelector","childNodes","XmlToTree","xml","nodeType","el","localName","Object","assign","from","name","value","convert","partClick2","acts","getRegisterActions","keys","getUnregisterActions","tabIndex","onKeyDown","e","keyCode","slice","next","some","add","pwr","tms","jax","display","Provider","priotiry","newarr","reverse","ar","App","className","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ef4f3b7.chunk.js","sourcesContent":["import React from 'react';\n\nconst MathContext = React.createContext({\n    path: '',\n    onClick: () => {},\n    registerActions: () => {},\n    unregisterActions: () => {}\n})\n\nexport default MathContext;","export const one = { type: \"cn\", idx: 2, children: [\"1\"], attributes: { type: \"integer\" } };\nexport const zero = { type: \"cn\", idx: 2, children: [\"0\"], attributes: { type: \"integer\" } };\n","import React, { useContext, useEffect } from 'react';\nimport MathContext from './MathContext';\nimport { set } from 'object-path-immutable';\nimport { one } from '../../utils/mathconsts';\n\n// attributes.type => integer | real | double | hexdouble | e-notation | rational | complex-cartesian | complex-polar | constant | text \n// attributes.base => integer\n// context => text | mglyph | sep | PresentationExpression\n\nconst IncreaseRational = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'rational') {\n        const [numerator, sep, denominator] = input.children;\n        input = set(input, 'children.0', (parseInt(input.children[0]) + parseInt(input.children[2])).toString());\n    }\n    return input;\n};\n\nconst DecreaseRational = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'rational') {\n        const [numerator, sep, denominator] = input.children;\n        input = set(input, 'children.0', (parseInt(input.children[0]) - parseInt(input.children[2])).toString());\n    }\n    return input;\n};\n\nconst RationalNumber = React.forwardRef(({ expr, path, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;        \n    useEffect(() => {\n        const actions = { \n            '+': IncreaseRational,\n            '-': DecreaseRational\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    const [numerator, sep, denominator] = expr;\n    return (\n        <mjx-mfrac ref={ref} space='4'>\n            <mjx-frac type='d'>\n                <mjx-num>\n                    <mjx-nstrut />\n                    <NaturalNumber expr={[numerator]} path={`${path}.[rat].0`} {...rest} />\n                </mjx-num>\n                <mjx-dbox>\n                    <mjx-dtable>\n                        <mjx-line type='d' />\n                        <mjx-row>\n                            <mjx-den>\n                                <mjx-dstrut />\n                                <NaturalNumber expr={[denominator]} path={`${path}.[rat].2`} {...rest} />                            </mjx-den>\n                        </mjx-row>\n                    </mjx-dtable>\n                </mjx-dbox>\n            </mjx-frac>\n        </mjx-mfrac>        \n    )\n});\n\nconst IncreaseNatural = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'integer') {\n        input = set(input, 'children.0', (parseInt(input.children[0])+1).toString());\n    }\n    if (typeof input === 'string') {\n        input = (parseInt(input) + 1).toString();\n    }\n    return input;\n};\n\nconst DecreaseNatural = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'integer') {\n        input = set(input, 'children.0', (parseInt(input.children[0])-1).toString());\n    }\n    if (typeof input === 'string') {\n        input = (parseInt(input) - 1).toString();\n    }    \n    return input;\n};\n\nconst NaturalNumber = React.forwardRef(({ expr, p, path, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;    \n    useEffect(() => {\n        const actions = { \n            '+': IncreaseNatural,\n            '-': DecreaseNatural\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [path, registerActions, unregisterActions]);\n    const isSelected = path.startsWith(ctx.selectedPath);\n    console.log('Number debug', expr);\n    const [num] = expr;\n    if (typeof num === 'string') {\n        return (\n            <mjx-mn {...rest} ref={ref} onClick={() => ctx.onClick(path)} style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n                {[...num].map((c, i) => (\n                    <mjx-c key={i} class={`mjx-c${c.charCodeAt(0).toString(16).toUpperCase()}`} />\n                ))}\n            </mjx-mn>\n        );\n    } else {\n        return <div>MathNumber unknown {JSON.stringify(expr)}</div>;\n    }\n});\n\nconst Refactor_DivideByOne = (input) => {\n    let idx = input.idx;\n    input = set(input, 'idx', 1);\n    input = {\n        type: \"apply\",\n        idx: idx,\n        children: [\n            { type: \"divide\", idx: 0 },\n            input,\n            { ...one, idx: 2 }\n        ]\n    }\n    return input;\n}\n\nconst ContentNumber = React.forwardRef(({ type, path, ...rest }, ref ) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;\n    useEffect(() => {\n        const actions = { \n            '/': Refactor_DivideByOne\n        }\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    if (type === 'rational') {\n        return <RationalNumber ref={ref} type={type} path={path} {...rest} />\n    } else {\n        return <NaturalNumber ref={ref} type={type} path={path} {...rest} />\n    }\n});\n\nexport default ContentNumber;","import React, { useContext } from 'react';\nimport MathContext from './MathContext';\n\nconst variableMap = {\n    x: '1D465',\n    a: '1D44E',\n    b: '1D44F',\n    c: '1D450',\n};\n\nconst ContentIdentifier = React.forwardRef(({ expr, path, onClick, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const c = variableMap[expr];\n    const isSelected = path.startsWith(ctx.selectedPath);\n    console.log('*** Variable path', isSelected);\n    console.log('path', path);\n    console.log('sel ', ctx.selectedPath);\n    return (\n        <mjx-mo ref={ref} onClick={() => onClick(path)} {...rest} style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            {c ? <mjx-c class={`mjx-c${c} TEX-I`} /> : expr}\n        </mjx-mo>\n    );\n});\n\nexport default ContentIdentifier;\n","import React from 'react';\n\nconst MathOperator = ({ children, path }) => {\n    console.log('Operator path', path);\n    return (\n        <mjx-mo space='4'>\n            <mjx-c class={`mjx-c${children.charCodeAt(0).toString(16).toUpperCase()}`} />\n        </mjx-mo>\n    );\n};\n\nexport default MathOperator;","import React from 'react';\nimport ApplyTemplate from './ApplyTemplate';\nimport MathOperator from './MathOperator';\n\nexport const MF = ({ expr: children, openSymbol, closeSymbol }) => {\n    return (\n        <mfenced openSymbol={openSymbol} closeSymbol={closeSymbol}>\n            {children.map((c, i) => (\n                <ApplyTemplate key={i} p={0} expr={c} />\n            ))}\n        </mfenced>\n    );\n};\n\nexport const Intersperse = ({ expr: children, useBrackets, priority, symbol, path, onClick, opPath }) => {\n    return (\n        <mjx-mrow>\n            {useBrackets && <MathOperator>(</MathOperator>}\n            {children.reduce((a, v, i) => {\n                i &&\n                    a.push(\n                        <MathOperator key={`o-${i}`} path={`${path}.[op-${symbol(v)}].0`}>\n                            {symbol(v)}\n                        </MathOperator>\n                    );\n                v &&\n                    a.push(\n                        <ApplyTemplate\n                            key={`a-${i}`}\n                            p={priority}\n                            expr={v}\n                            path={`${path}.[op-${opPath}].${v.idx}`}\n                            onClick={onClick}\n                        />\n                    );\n                return a;\n            }, [])}\n            {useBrackets && <MathOperator>)</MathOperator>}\n        </mjx-mrow>\n    );\n};\n\nexport const Binary = ({ expr: operands, newPriority, oldPriority, symbol, path, onClick, opPath }) => {\n    return (\n        <Intersperse\n            useBrackets={\n                newPriority < oldPriority || (newPriority === oldPriority && symbol() === '-')\n            }\n            level={newPriority}\n            symbol={symbol}\n            expr={operands}\n            path={path}\n            onClick={onClick}\n            opPath={opPath}\n        />\n    );\n};\n","import React from 'react';\nimport Power from './Power';\nimport Root from './Root';\nimport Addition from './Addition';\nimport Subtraction from './Subtraction';\nimport Multiplication from './Multiplication';\nimport Division from './Division';\nimport Equation from './Equation';\n\nimport ApplyTemplate from './ApplyTemplate';\nimport MathOperator from './MathOperator';\nimport { MF } from './Generic';\n\nconst Templates = {\n    eq: Equation,\n    divide: Division,\n    times: Multiplication,\n    minus: Subtraction,\n    plus: Addition,\n    root: Root,\n    power: Power,\n};\n\nconst Apply = ({ expr, priority, path, onClick }) => {\n    var first = null;\n    var operands = [],\n        bvars = [],\n        params = [];\n    expr.forEach((c) => {\n        if (typeof c !== 'string') {\n            const nm = c.type;\n            if (nm === 'bvar') {\n                bvars.push(c);\n            } else if (\n                nm === 'condition' ||\n                nm === 'degree' ||\n                nm === 'logbase' ||\n                nm === 'lowlimit' ||\n                nm === 'uplimit' ||\n                (nm === 'interval' && !operands.length) ||\n                nm === 'domainofapplication'\n            ) {\n                params.push(c);\n            } else if (first === null) {\n                first = c;\n            } else {\n                operands.push(c);\n            }\n        }\n    });\n    if (first) {\n        var nm = first.type;\n        // const { children } = first;\n        nm = nm === 'csymbol' ? first.textContent : nm;\n        const C = Templates[nm];\n        if (C) {\n            //ctopTapply[nm](target, node, first, operands, bvars, params, level);\n            if (nm === 'minus') {\n                console.log('minus', operands, expr);\n            }\n            return (\n                <C\n                    priority={priority}\n                    params={params}\n                    expr={operands}\n                    path={`${path}`}\n                    onClick={onClick}\n                />\n            );\n        } else {\n            return (\n                <mjx-mrow>\n                    {expr ? <ApplyTemplate p={0} expr={{ first }} /> : <mjx-mi>{nm}</mjx-mi>}\n                    <MathOperator>{'\\u2061'}</MathOperator>\n                    <MF openSymbol='(' closeSymbol=')' expr={operands} />\n                </mjx-mrow>\n            );\n        }\n    } else {\n        return <mjx-mrow />;\n    }\n};\n\nexport default Apply;","import React from 'react';\nimport { Intersperse } from './Generic';\n\nconst Equation = ({ expr: operands, priority, path, onClick }) => {\n    console.log('Equation path', path);\n    // reorder operands\n    // if more than 2: split into multiple equations\n    return (\n        <Intersperse\n            useBrackets={priority > 1}\n            level={priority}\n            symbol={() => '='}\n            expr={operands}\n            path={path}\n            onClick={onClick}\n            opPath='='\n        />\n    );\n};\n\nexport default Equation;","import React from 'react';\nimport ApplyTemplate from './ApplyTemplate';\n\nconst Division = ({ expr: operands, priority, path, onClick }) => {\n    console.log('Division path', path);\n    const [numerator, denominator] = operands;\n    return (\n        <mjx-mfrac space='4'>\n            <mjx-frac type='d'>\n                <mjx-num>\n                    <mjx-nstrut />\n                    <ApplyTemplate\n                        p={priority}\n                        expr={numerator}\n                        path={`${path}.[div].${numerator.idx}`}\n                        onClick={onClick}\n                    />\n                </mjx-num>\n                <mjx-dbox>\n                    <mjx-dtable>\n                        <mjx-line type='d' />\n                        <mjx-row>\n                            <mjx-den>\n                                <mjx-dstrut />\n                                <ApplyTemplate\n                                    p={priority}\n                                    expr={denominator}\n                                    path={`${path}.[div].${denominator.idx}`}\n                                    onClick={onClick}\n                                />\n                            </mjx-den>\n                        </mjx-row>\n                    </mjx-dtable>\n                </mjx-dbox>\n            </mjx-frac>\n        </mjx-mfrac>\n    );\n};\n\nexport default Division;","import React from 'react';\nimport { Intersperse } from './Generic';\n\nconst Multiplication = ({ expr: operands, priority, path, onClick }) => {\n    return (\n        <Intersperse\n            useBrackets={priority > 3}\n            level={priority}\n            symbol={(o) => (o.type === 'cn' ? '\\u00D7' : '\\u2062')}\n            expr={operands}\n            path={path}\n            onClick={onClick}\n            opPath='*'\n        />\n    );\n};\n\nexport default Multiplication;","import React from 'react';\nimport { Binary } from './Generic';\n\nconst Subtraction = ({ expr: operands, priority, path, onClick }) => {\n    console.log('Subtraction', operands);\n    const cnt = operands.length;\n    const newPriority = cnt === 1 ? 5 : 2;\n    return (\n        <Binary\n            newPriority={newPriority}\n            oldPriority={priority}\n            symbol={() => '\\u2212'}\n            expr={cnt === 1 ? [undefined, operands[0]] : operands}\n            path={path}\n            onClick={onClick}\n            opPath='-'\n        />\n    );\n};\n\nexport default Subtraction;","import React from 'react';\nimport MathOperator from './MathOperator';\nimport ApplyTemplate from './ApplyTemplate';\n\nconst Addition = ({ expr: operands, priority, path, onClick }) => {\n    return (\n        <mjx-mrow>\n            {priority > 2 && <MathOperator>(</MathOperator>}\n            {operands.reduce((a, o, j) => {\n                const npath = `${path}.[add].${o.idx}`;\n                if (j > 0) {\n                    const c = o.children || [];\n                    if (o.type === 'cn' && !c.length && Number(o.textContent) < 0) {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        a.push(<mjx-mn key={`n-${j}`}>{Number(o.textContent)}</mjx-mn>);\n                    } else if (o.type === 'apply' && c.length === 2 && c[0].type === 'minus') {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={c[1]} path={npath} />);\n                    } else if (\n                        o.type === 'apply' &&\n                        c.length > 2 &&\n                        c[0].type === 'times' &&\n                        c[1].type === 'cn' &&\n                        Number(c[1].textContent) < 0\n                    ) {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        c[1].textContent = -Number(c[1].textContent); // fix me: modifying document\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} />);\n                    } else {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>+</MathOperator>);\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} onClick={onClick} />);\n                    }\n                } else {\n                    a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} onClick={onClick} />);\n                }\n                return a;\n            }, [])}\n            {priority > 2 && <MathOperator>)</MathOperator>}\n        </mjx-mrow>\n    );\n};\n\nexport default Addition;","import React from 'react';\nimport MathOperator from './MathOperator';\nimport ApplyTemplate from './ApplyTemplate';\n\nconst Root = ({ expr, params, path, onClick }) => {\n    const isSquareRoot =\n        params.length === 0 || (params[0].type === 'degree' && params[0].textContent === '2');\n    if (isSquareRoot) {\n        return (\n            <mjx-msqrt space='3'>\n                <mjx-sqrt>\n                    <mjx-surd>\n                        <MathOperator path={`${path}.[root].0`}>{`\\u221A`}</MathOperator>\n                    </mjx-surd>\n                    <mjx-box>\n                        <ApplyTemplate priority={0} expr={expr} path={`${path}.[root]`} onClick={onClick} />\n                    </mjx-box>\n                </mjx-sqrt>\n            </mjx-msqrt>\n        );\n    } else {\n        return <div>Other root</div>;\n    }\n};\n\nexport default Root;","\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ApplyTemplate from './ApplyTemplate';\n\nconst Power = ({ expr, priority, params, path, onClick }) => {\n    const [base, exponent] = expr;\n    const [va, setVA] = useState('0');\n    const [baseNode, setBaseNode] = useState(null);\n    const [superNode, setSuperNode] = useState(null);\n    const measureSuper = useCallback((node) => {\n        setSuperNode(node);\n    }, []);\n    const measureBase = useCallback((node) => {\n        setBaseNode(node);\n    }, []);\n    useEffect(() => {\n        if (baseNode && superNode) {\n            setVA(\n                `${\n                    baseNode.getBoundingClientRect().height -\n                    superNode.getBoundingClientRect().height\n                }px`\n            );\n        }\n    }, [baseNode, superNode]);\n    return (\n        <mjx-msup>\n            <ApplyTemplate\n                ref={measureBase}\n                priority={priority}\n                expr={base}\n                path={`${path}.[pwr].${base.idx}`}\n                onClick={onClick}\n            />\n            <mjx-script style={{ verticalAlign: va }}>\n                <ApplyTemplate\n                    ref={measureSuper}\n                    priority={priority}\n                    size='s'\n                    expr={exponent}\n                    path={`${path}.[pwr].${exponent.idx}`}\n                    onClick={onClick}\n                />\n            </mjx-script>\n        </mjx-msup>\n    );\n};\n\nexport default Power;","import React, { useContext, useEffect } from 'react';\nimport ContentNumber from './ContentNumber';\nimport ContentIdentifier from './ContentIdentifier'\nimport Apply from './Apply';\n\nconst Templates = {\n    apply: Apply,\n    ci: ContentIdentifier,\n    cn: ContentNumber,\n};\n\nconst ApplyTemplate = React.forwardRef(({ expr: n, priority, path, onClick, ...rest }, ref) => {\n    if (!n) {\n        return null;\n    }\n    if (typeof n !== 'string') {\n        if (!Array.isArray(n)) {\n            const tp = n.type;\n            const C = Templates[tp];\n            if (C) {\n                return (\n                    <C\n                        expr={n.children}\n                        priority={priority}\n                        ref={ref}\n                        path={`${path}`}\n                        onClick={onClick}\n                        {...(n.attributes ? n.attributes : undefined)}\n                        {...rest}\n                    />\n                );\n            } else if (n.children && n.children.length === 0) {\n                return <mjx-mi>{tp}</mjx-mi>;\n            } else {\n                return (\n                    <div>\n                        what now {tp} {JSON.stringify(n)}\n                    </div>\n                );\n            }\n        } else {\n            return n.map((c, i) => (\n                <ApplyTemplate key={i} p={priority} expr={c} path={`${path}.${c.idx}`} onClick={onClick} />\n            ));\n        }\n    } else {\n        return n;\n    }\n});\n\nexport default ApplyTemplate;","import React, { useCallback, useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types'; // ES6\nimport ReactDOMServer from 'react-dom/server';\nimport { get, set } from 'object-path-immutable';\nimport MathContext from './MathML/MathContext';\nimport { one, zero } from '../utils/mathconsts';\nimport ApplyTemplate from './MathML/ApplyTemplate';\n\nconst XmlToTree = (xml, ctx) => {\n    if (xml.nodeType === 1) {\n        const el = {\n            type: xml.localName,\n        };\n        ctx.children = ctx.children || [];\n        ctx.children.push(el);\n        el.idx = ctx.children.length - 1;\n        if (xml.attributes.length > 0) {\n            console.log('attributes', xml.attributes);\n            el.attributes = Object.assign({}, ...Array.from(xml.attributes, ({ name, value }) => ({ [name]: value })));\n        }\n        if (xml.childNodes) {\n            xml.childNodes.forEach((x) => {\n                XmlToTree(x, el);\n            });\n        }\n    } else if (xml.nodeType === 3) {\n        ctx.children = ctx.children || [];\n        ctx.children.push(xml.textContent);\n    } else {\n        console.log('not found!', xml);\n    }\n};\n\nconst getPath = (mathExpr, path) => {\n    path = path\n        .split(/\\[[^\\]]+\\]/g)\n        .join('children')\n        .substr(5);    \n    return get(mathExpr, path);\n}\n\nconst setPath = (mathExpr, path, o) => {\n    path = path\n        .split(/\\[[^\\]]+\\]/g)\n        .join('children')\n        .substr(5);    \n    return set(mathExpr, path, o);\n}\n\nlet mathmlid = 1;\nconst actions = {};\n\nconst getRegisterActions = id => (path, acts) => {\n    actions[id] = actions[id] || {}; \n    actions[id][path] = actions[id][path] || {}; \n    actions[id][path] = { ...actions[id][path], ...acts };\n}\n\nconst getUnregisterActions = id => (path, acts) => {\n    Object.keys(acts).forEach(a => {\n        delete actions[id][path][a];\n    });\n}\n\nconst MathML = ({ children }) => {\n    const [id,] = useState((mathmlid++).toString());\n    const [mathExpr, setMathExpr] = useState({});\n    const [selectedPath, setSelectedPath] = useState('');\n    const [ctx, setCtx] = useState({});\n    const math = React.Children.only(children);\n\n    useEffect(() => {\n        const convert = () => {\n            const str = ReactDOMServer.renderToString(children);\n            const prs = new DOMParser();\n            let eqDoc = prs.parseFromString(str, 'text/xml');\n            eqDoc = eqDoc.querySelector('math');\n            const root = {\n                type: 'root',\n            };\n            eqDoc.childNodes.forEach((x) => XmlToTree(x, root));\n            setMathExpr(root.children);\n            console.log('matchExpr', root.children);\n        };\n        convert();\n    }, [children]);\n\n    const partClick = (path) => {\n        console.log('onClick', path)\n        setSelectedPath(path);\n    };\n\n    const partClick2 = useCallback((path) => {\n        console.log('onClick', path)\n        setSelectedPath(path);\n    }, [setSelectedPath]);\n\n    const registerActions = useCallback(getRegisterActions(id), [id]);\n    const unregisterActions = useCallback(getUnregisterActions(id), [id]);\n\n    useEffect(() => {\n        setCtx({\n            onClick: partClick2,\n            selectedPath,\n            registerActions: registerActions,\n            unregisterActions: unregisterActions\n        });\n        console.log('CTX SET')\n    }, [id, partClick2, selectedPath, registerActions, unregisterActions]);\n\n    return (\n        <div tabIndex=\"0\" onKeyDown={(e) => {\n            console.log(actions[id][selectedPath])\n            if (actions[id], actions[id][selectedPath] && actions[id][selectedPath][e.key]) {\n                console.log('ACTIONS', actions[id], selectedPath, actions[id][selectedPath]);\n                let o = getPath(mathExpr, selectedPath);\n                o = actions[id][selectedPath][e.key](o);\n                if (o) {\n                    setMathExpr(setPath(mathExpr, selectedPath, o)); \n                }               \n            } else if (e.keyCode === 27) {\n                let path = selectedPath\n                    .split('.')\n                    .slice(0, -2)\n                    .join('.');\n                setSelectedPath(path);\n            } else if (e.keyCode === 39) {\n                let path = selectedPath\n                    .split(/\\[[^\\]]+\\]/g)\n                    .join('children')\n                    .substr(5)\n                    .split('.');\n                const next = parseInt(path[path.length-1]) + 1;\n                path = path.slice(0, -1).join('.');\n                const o = get(mathExpr, path);\n                //console.log(JSON.stringify(o), 'NEXT', next);\n                if (o.some(x => x.idx === next)) {\n                    setSelectedPath(selectedPath.split('.').slice(0, -1).join('.') + '.'+ next);\n                };\n            } else if (e.keyCode === 37) {\n                let path = selectedPath\n                    .split(/\\[[^\\]]+\\]/g)\n                    .join('children')\n                    .substr(5)\n                    .split('.');\n                const next = parseInt(path[path.length-1]) - 1;\n                if (next > 0) {\n                    path = path.slice(0, -1).join('.');\n                    const o = get(mathExpr, path);\n                    //console.log(JSON.stringify(o), 'NEXT', next);\n                    if (o.some(x => x.idx === next)) {\n                        setSelectedPath(selectedPath.split('.').slice(0, -1).join('.') + '.'+ next);\n                    };\n                }\n            } else if (e.key === '+') {\n                let o = getPath(mathExpr, selectedPath);\n                if (o.type === 'apply' || o.type === 'ci') {\n                    let idx = o.idx;\n                    o = set(o, 'idx', 1);\n                    const add = {\n                        type: \"apply\",\n                        idx: idx,\n                        children: [\n                            { type: \"plus\", idx: 0 },\n                            o,\n                            { ...zero, idx: 2 }\n                        ]\n                    }\n                    setMathExpr(setPath(mathExpr, selectedPath, add));                     \n                }\n            } else if (e.key === '^') {\n                let o = getPath(mathExpr, selectedPath);\n                let idx = o.idx;\n                o = set(o, 'idx', 1);\n                const pwr = {\n                    type: \"apply\",\n                    idx: idx,\n                    children: [\n                        { type: \"power\", idx: 0 },\n                        o,\n                        { ...one, idx: 2 }\n                    ]\n                }\n                setMathExpr(setPath(mathExpr, selectedPath, pwr));\n            } else if (e.key === '*') {\n                let o = getPath(mathExpr, selectedPath);\n                let idx = o.idx;\n                o = set(o, 'idx', 1);\n                const tms = {\n                    type: \"apply\",\n                    idx: idx,\n                    children: [\n                        { type: \"times\", idx: 0 },\n                        o,\n                        { ...one, idx: 2 }\n                    ]\n                }\n                setMathExpr(setPath(mathExpr, selectedPath, tms));\n            } else if (e.keyCode === 83) {\n                // simplify per step\n                // reduce: T / 1 => T\n                // reduce: T * 1 => T\n                // reduce: T ^ 1 => T\n                // reduce: T ^ 0 => 1\n                // reduce: (T1 + T2) + T3 => T1 + T2 + T3\n                // reduce: R => C1/C2 (ie 0.5 => 1/2)\n                // reduce: C1 + C2 = C3\n                // reduce (C1+(C2/C3)) + (C4+(C5/C6)) = C7+(C8/C9) (combine rationals) \n                // maybe: T1 - T2 = T1 + -T2 (display is same)\n                // reduce: (C * Tx) / Tx => C\n                // reduce: C * Tx^n / Tx^m => C * Tx^(n-m)\n                // reduce: C1.Tx + C2.Tx => (C1+C2).Tx\n                // solve: 2.x^2 + 2.x => (2.x) . (x + 1)\n                // style: 2.x + 2 = 2.(x + 1)\n                // style: x . 42 . z => 42 . x . z\n                // style: (42 . x) / y => 42 . (x / y)\n                // style: T1 + C = T2 => T2 - T1 = C\n            } else {\n                console.log('KEYCODE', e.key);\n                console.log(e);\n            }\n        }}>\n            <mjx-container jax='CHTML' display='true'>\n                <mjx-math display='true' class='MJX-TEX'>\n                    <MathContext.Provider value={ctx}>\n                        <ApplyTemplate expr={mathExpr} priotiry={0} path='math' onClick={partClick} />\n                    </MathContext.Provider>\n                </mjx-math>\n            </mjx-container>\n            <button\n                onClick={() => {\n                    let path = selectedPath\n                        .split(/\\[[^\\]]+\\]/g)\n                        .join('children')\n                        .substr(5);\n\n                    //let me = JSON.parse(JSON.stringify(mathExpr));\n                    path = path.split('.').slice(0, -1).join('.');\n                    const o = get(mathExpr, path);\n                    const newarr = [o[0], ...o.slice(1).reverse()];\n                    newarr.forEach((o, i) => o.idx = i);\n                    setMathExpr(set(mathExpr, path, newarr));\n                    //alert(path + JSON.stringify(o));\n                    //const ar = mathExpr[0].children;\n                    //mathExpr[0].children = [ ar[0], ar[2], ar[1] ];\n                    //setMathExpr([...mathExpr]);\n                }}\n            >\n                SWAP sel\n            </button>\n            <button\n                onClick={() => {\n                    let ar = mathExpr[0].children;\n                    mathExpr[0] = {\n                        type: 'apply',\n                        children: [ar[0], ar[2], ar[1]],\n                    };\n                    setMathExpr([...mathExpr]);\n                }}\n            >\n                SWAP div\n            </button>\n        </div>\n    );\n};\n\nMathML.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n\nexport default MathML;\n","import React from 'react';\nimport './App.css';\nimport './mathml.css';\nimport MathML from './components/MathML';\n\n/*\n  <cn>12</cn>\n\n  action: split => also with plus (brackets!)\n\n    <apply>\n      <times/>\n      <cn>3</cn>\n      <cn>4</cn>\n    </apply>  \n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>         \n*/\n\n/*\n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>  \n\n    action: simplify\n    <cn>12</cn>\n*/\n\n/*\n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>  \n\n    action: reorder\n    <apply>\n      <times/>\n      <cn>6</cn>\n      <cn>2</cn>\n    </apply>  \n*/\n\n/*\n<apply>\n  <times/>\n  <cn>2</cn>\n  <ci>a</ci>\n</apply>\n*/\n\n/*\n  collect same var terms i.e x^2\n  equality both sides by factor\n  equality multiply both sides by factor\n  split equation with ± in to with or\n  square both sides\n  convert division to multiplication\n  combine factors to one\n  divide num en den by factor (if var then add and var != 0)\n  extract factor (term + term)\n  simplyfy division by 1\n  make denominator of two divisions same by using a factor of one of the denominators\n  subtract term from both sides of equation so that after simplify one term less\n  make dirivative or make intergral\n*/\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Play with mathematical formula\n        </p>\n      <MathML>\n          <math display=\"block\">\n            <apply>\n              <eq/>\n              <ci>x</ci>\n              <apply>\n                <divide/>\n                <apply>\n                  <plus/>\n                  <apply>\n                    <minus/>\n                    <ci>b</ci>\n                  </apply>\n                  <apply>\n                    <root>\n                      <degree>2</degree>\n                    </root>\n                    <apply>\n                      <minus/>\n                      <apply>\n                        <power/>\n                        <ci>b</ci>\n                        <cn type=\"integer\">2</cn>\n                      </apply>\n                      <apply>\n                        <times/>\n                        <cn type=\"integer\">4</cn>\n                        <ci>a</ci>\n                        <ci>c</ci>\n                      </apply>\n                    </apply>\n                  </apply>\n                </apply>\n                <apply>\n                  <times/>\n                  <cn type=\"rational\">2<sep/>3</cn>\n                  <ci>a</ci>\n                </apply>\n              </apply>\n            </apply>\n          </math>\n        </MathML>\n        <MathML>\n          <math>\n            <apply>\n              <eq/>\n              <ci>x</ci>\n              <cn type=\"integer\">0</cn>\n            </apply>\n          </math>\n        </MathML>        \n        <pre style={{ textAlign: 'left' }}>{`\n          SWAP sel is currently broken\n\n          Selecting parts\n          - red is selected\n          - mouse click to select numbers or symbols\n\n          Navigation\n          - ESC to select parent of current selection\n          - RIGHT ARROW select next child of current selection\n          - LEFT ARROW select\n\n          Changing math\n          - +/- on number (rational or natural)\n\n          Refactor\n          - ^ on natural number or symbol raise to power 1\n          - / on number divide by 1\n          - + on non number add 0\n          - * multiply by 1`}\n        </pre>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}