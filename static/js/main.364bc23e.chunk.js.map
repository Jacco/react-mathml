{"version":3,"sources":["components/MathML/MathContext.jsx","utils/mathconsts.js","components/MathML/ContentNumber.jsx","components/MathML/ContentIdentifier.jsx","components/MathML/Power.jsx","components/MathML/MathOperator.jsx","components/MathML/Root.jsx","components/MathML/Addition.jsx","components/MathML/Generic.jsx","components/MathML/Apply.jsx","components/MathML/Equation.jsx","components/MathML/Division.jsx","components/MathML/Multiplication.jsx","components/MathML/Subtraction.jsx","components/MathML/ApplyTemplate.jsx","components/MathML.jsx","App.js","serviceWorker.js","index.js"],"names":["mathContextDefault","path","onClick","registerActions","unregisterActions","MathContext","React","createContext","default","one","type","idx","children","attributes","zero","IncreaseRational","input","set","parseInt","toString","DecreaseRational","RationalNumber","forwardRef","ref","expr","rest","ctx","useContext","useEffect","actions","numerator","denominator","isSelected","selectedPath","space","style","backgroundColor","NaturalNumber","IncreaseNatural","DecreaseNatural","p","console","log","num","map","c","i","key","class","charCodeAt","toUpperCase","JSON","stringify","Refactor_DivideByOne","ContentNumber","variableMap","x","a","b","ContentIdentifier","Power","priority","params","base","exponent","useState","va","setVA","baseNode","setBaseNode","superNode","setSuperNode","measureSuper","useCallback","node","measureBase","getBoundingClientRect","height","verticalAlign","size","MathOperator","Root","isSquareRoot","length","textContent","Refactor_Simplify","noidx","y","parse","chk","every","rpt","some","pidx","findIndex","plus","onew","slice","MF","openSymbol","closeSymbol","Intersperse","useBrackets","symbol","opPath","selected","reduce","v","push","Binary","operands","newPriority","oldPriority","Templates","eq","level","divide","times","o","minus","cnt","undefined","j","npath","Number","root","power","apply","first","bvars","forEach","nm","C","ci","cn","Refactor_Split","splice","Array","fill","ApplyTemplate","n","isArray","tp","getPath","mathExpr","split","join","substr","get","setPath","mathmlid","MathML","id","setMathExpr","setSelectedPath","setCtx","Children","only","str","ReactDOMServer","renderToString","eqDoc","DOMParser","parseFromString","querySelector","childNodes","XmlToTree","xml","nodeType","el","localName","Object","assign","from","name","value","convert","partClick2","acts","getRegisterActions","keys","getUnregisterActions","tabIndex","onKeyDown","e","keyCode","next","add","pwr","tms","jax","display","Provider","priotiry","newarr","reverse","ar","App","className","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.364bc23e.chunk.js","sourcesContent":["import React from 'react';\n\nconst mathContextDefault = {\n    path: '',\n    onClick: () => {},\n    registerActions: () => {},\n    unregisterActions: () => {}\n}\n\nconst MathContext = React.createContext(mathContextDefault);\n\nMathContext.default = mathContextDefault;\n\nexport default MathContext;","export const one = { type: \"cn\", idx: 2, children: [\"1\"], attributes: { type: \"integer\" } };\nexport const zero = { type: \"cn\", idx: 2, children: [\"0\"], attributes: { type: \"integer\" } };\n","import React, { useContext, useEffect } from 'react';\nimport MathContext from './MathContext';\nimport { set } from 'object-path-immutable';\nimport { one } from '../../utils/mathconsts';\n\n// attributes.type => integer | real | double | hexdouble | e-notation | rational | complex-cartesian | complex-polar | constant | text \n// attributes.base => integer\n// context => text | mglyph | sep | PresentationExpression\n\nconst IncreaseRational = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'rational') {\n        const [numerator, sep, denominator] = input.children;\n        input = set(input, 'children.0', (parseInt(input.children[0]) + parseInt(input.children[2])).toString());\n    }\n    return input;\n};\n\nconst DecreaseRational = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'rational') {\n        const [numerator, sep, denominator] = input.children;\n        input = set(input, 'children.0', (parseInt(input.children[0]) - parseInt(input.children[2])).toString());\n    }\n    return input;\n};\n\nconst RationalNumber = React.forwardRef(({ expr, path, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;        \n    useEffect(() => {\n        const actions = { \n            '+': IncreaseRational,\n            '-': DecreaseRational\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    const [numerator, sep, denominator] = expr;\n    const isSelected = ctx.selectedPath === path;\n    return (\n        <mjx-mfrac ref={ref} space='4' style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            <mjx-frac type='d'>\n                <mjx-num>\n                    <mjx-nstrut />\n                    <NaturalNumber expr={[numerator]} path={`${path}.[rat].0`} {...rest} />\n                </mjx-num>\n                <mjx-dbox>\n                    <mjx-dtable>\n                        <mjx-line type='d' />\n                        <mjx-row>\n                            <mjx-den>\n                                <mjx-dstrut />\n                                <NaturalNumber expr={[denominator]} path={`${path}.[rat].2`} {...rest} />                            </mjx-den>\n                        </mjx-row>\n                    </mjx-dtable>\n                </mjx-dbox>\n            </mjx-frac>\n        </mjx-mfrac>        \n    )\n});\n\nconst IncreaseNatural = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'integer') {\n        input = set(input, 'children.0', (parseInt(input.children[0])+1).toString());\n    }\n    if (typeof input === 'string') {\n        input = (parseInt(input) + 1).toString();\n    }\n    return input;\n};\n\nconst DecreaseNatural = (input) => {\n    if (input.type === 'cn' && input.attributes?.type === 'integer') {\n        input = set(input, 'children.0', (parseInt(input.children[0])-1).toString());\n    }\n    if (typeof input === 'string') {\n        input = (parseInt(input) - 1).toString();\n    }    \n    return input;\n};\n\nconst NaturalNumber = React.forwardRef(({ expr, p, path, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;    \n    useEffect(() => {\n        const actions = { \n            '+': IncreaseNatural,\n            '-': DecreaseNatural\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [path, registerActions, unregisterActions]);\n    const isSelected = ctx.selectedPath === path;\n    console.log('Number debug', expr);\n    const [num] = expr;\n    if (typeof num === 'string') {\n        return (\n            <mjx-mn {...rest} ref={ref} onClick={() => ctx.onClick(path)} style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n                {[...num].map((c, i) => (\n                    <mjx-c key={i} class={`mjx-c${c.charCodeAt(0).toString(16).toUpperCase()}`} />\n                ))}\n            </mjx-mn>\n        );\n    } else {\n        return <div>MathNumber unknown {JSON.stringify(expr)}</div>;\n    }\n});\n\nconst Refactor_DivideByOne = (input) => {\n    let idx = input.idx;\n    input = set(input, 'idx', 1);\n    input = {\n        type: \"apply\",\n        idx: idx,\n        children: [\n            { type: \"divide\", idx: 0 },\n            input,\n            { ...one, idx: 2 }\n        ]\n    }\n    return input;\n}\n\nconst ContentNumber = React.forwardRef(({ type, path, ...rest }, ref ) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;\n    useEffect(() => {\n        const actions = { \n            '/': Refactor_DivideByOne\n        }\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    if (type === 'rational') {\n        return <RationalNumber ref={ref} type={type} path={path} {...rest} />\n    } else {\n        return <NaturalNumber ref={ref} type={type} path={path} {...rest} />\n    }\n});\n\nexport default ContentNumber;","import React, { useContext } from 'react';\nimport MathContext from './MathContext';\n\nconst variableMap = {\n    x: '1D465',\n    a: '1D44E',\n    b: '1D44F',\n    c: '1D450',\n};\n\nconst ContentIdentifier = React.forwardRef(({ expr, path, onClick, ...rest }, ref) => {\n    const ctx = useContext(MathContext);\n    const c = variableMap[expr];\n    const isSelected = ctx.selectedPath === path;\n    console.log('*** Variable path', isSelected);\n    console.log('path', path);\n    console.log('sel ', ctx.selectedPath);\n    return (\n        <mjx-mo ref={ref} onClick={() => onClick(path)} {...rest} style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            {c ? <mjx-c class={`mjx-c${c} TEX-I`} /> : expr}\n        </mjx-mo>\n    );\n});\n\nexport default ContentIdentifier;\n","\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport ApplyTemplate from './ApplyTemplate';\nimport MathContext from './MathContext';\n\nconst Power = ({ expr, priority, params, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    const isSelected = ctx.selectedPath === path;\n    const [base, exponent] = expr;\n    const [va, setVA] = useState('0');\n    const [baseNode, setBaseNode] = useState(null);\n    const [superNode, setSuperNode] = useState(null);\n    const measureSuper = useCallback((node) => {\n        setSuperNode(node);\n    }, []);\n    const measureBase = useCallback((node) => {\n        setBaseNode(node);\n    }, []);\n    useEffect(() => {\n        if (baseNode && superNode) {\n            setVA(\n                `${\n                    baseNode.getBoundingClientRect().height -\n                    superNode.getBoundingClientRect().height\n                }px`\n            );\n        }\n    }, [baseNode, superNode]);\n    return (\n        <mjx-msup style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            <ApplyTemplate\n                ref={measureBase}\n                priority={priority}\n                expr={base}\n                path={`${path}.[pwr].${base.idx}`}\n                onClick={onClick}\n            />\n            <mjx-script style={{ verticalAlign: va }}>\n                <ApplyTemplate\n                    ref={measureSuper}\n                    priority={priority}\n                    size='s'\n                    expr={exponent}\n                    path={`${path}.[pwr].${exponent.idx}`}\n                    onClick={onClick}\n                />\n            </mjx-script>\n        </mjx-msup>\n    );\n};\n\nexport default Power;","import React from 'react';\n\nconst MathOperator = ({ children, path }) => {\n    console.log('Operator path', path);\n    return (\n        <mjx-mo space='4'>\n            <mjx-c class={`mjx-c${children.charCodeAt(0).toString(16).toUpperCase()}`} />\n        </mjx-mo>\n    );\n};\n\nexport default MathOperator;","import React, { useContext } from 'react';\nimport MathOperator from './MathOperator';\nimport ApplyTemplate from './ApplyTemplate';\nimport MathContext from './MathContext';\n\nconst Root = ({ expr, params, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    const isSquareRoot =\n        params.length === 0 || (params[0].type === 'degree' && params[0].textContent === '2');\n    const isSelected = ctx.selectedPath === path;\n    if (isSquareRoot) {\n        return (\n            <mjx-msqrt space='3' style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n                <mjx-sqrt>\n                    <mjx-surd>\n                        <MathOperator path={`${path}.[root].0`}>{`\\u221A`}</MathOperator>\n                    </mjx-surd>\n                    <mjx-box>\n                        <ApplyTemplate priority={0} expr={expr} path={`${path}.[root]`} onClick={onClick} />\n                    </mjx-box>\n                </mjx-sqrt>\n            </mjx-msqrt>\n        );\n    } else {\n        return <div>Other root</div>;\n    }\n};\n\nexport default Root;","import React, { useContext, useEffect } from 'react';\nimport MathOperator from './MathOperator';\nimport MathContext from './MathContext';\nimport ApplyTemplate from './ApplyTemplate';\nimport { set } from 'object-path-immutable';\n\nconst Refactor_Simplify = (input) => {\n    const [operator, ...children] = input.children;\n    const noidx = children.map(x => { const y = JSON.parse(JSON.stringify(x)); delete y.idx; return y });\n    const chk = JSON.stringify(noidx[0]);\n    if (noidx.every(x => JSON.stringify(x) === chk)) {\n        // T + T + T = 3*T\n        const rpt = JSON.parse(JSON.stringify(children[0]));\n        rpt.idx = 2;\n        const onew = {\n            type: 'apply',\n            idx: input.idx,\n            children: [\n                {\n                    type: 'times'\n                },\n                {\n                    type: 'cn',\n                    attributes: { type: 'integer' },\n                    children: [noidx.length.toString()],\n                    idx: 1\n                },\n                rpt\n            ]\n        }\n        return onew;\n    } else if (noidx.some(x => x.type === 'apply' && x.children[0].type === 'plus')) {\n        console.log('PLUS')\n        // combine plus with plus\n        const pidx = noidx.findIndex(x => x.type === 'apply' && x.children[0].type === 'plus');\n        const plus = noidx[pidx];\n        const onew = [{ type: 'plus' }, ...noidx.slice(0,pidx), ...plus.children.slice(1), ...noidx.slice(pidx+1)].map((x, i) => { x.idx = i+1; return x; });\n        input = set(input, 'children', onew);\n        console.log(JSON.parse(JSON.stringify(input)))\n        return input;\n    } else if (false) {\n        // combine terms with same xyz powers (inlcudes x^0)\n\n    }\n    return input;\n};\n\nconst Addition = ({ expr: operands, priority, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;        \n    useEffect(() => {\n        const actions = { \n            '.': Refactor_Simplify\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    const isSelected = path === ctx.selectedPath;\n    console.log('ADDITION', priority)\n    return (\n        <mjx-mrow style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            {priority > 2 && <MathOperator>(</MathOperator>}\n            {operands.reduce((a, o, j) => {\n                const npath = `${path}.[add].${o.idx}`;\n                if (j > 0) {\n                    const c = o.children || [];\n                    if (o.type === 'cn' && !c.length && Number(o.textContent) < 0) {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        a.push(<mjx-mn key={`n-${j}`}>{Number(o.textContent)}</mjx-mn>);\n                    } else if (o.type === 'apply' && c.length === 2 && c[0].type === 'minus') {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={c[1]} path={npath} />);\n                    } else if (\n                        o.type === 'apply' &&\n                        c.length > 2 &&\n                        c[0].type === 'times' &&\n                        c[1].type === 'cn' &&\n                        Number(c[1].textContent) < 0\n                    ) {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>{`\\u2212`}</MathOperator>);\n                        c[1].textContent = -Number(c[1].textContent); // fix me: modifying document\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} />);\n                    } else {\n                        a.push(<MathOperator key={`op-${j}`} path={`${npath}.0`}>+</MathOperator>);\n                        a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} onClick={onClick} />);\n                    }\n                } else {\n                    a.push(<ApplyTemplate key={`a-${j}`} priority={3} expr={o} path={npath} onClick={onClick} />);\n                }\n                return a;\n            }, [])}\n            {priority > 2 && <MathOperator>)</MathOperator>}\n        </mjx-mrow>\n    );\n};\n\nexport default Addition;","import React from 'react';\nimport ApplyTemplate from './ApplyTemplate';\nimport MathOperator from './MathOperator';\n\nexport const MF = ({ expr: children, openSymbol, closeSymbol }) => {\n    return (\n        <mfenced openSymbol={openSymbol} closeSymbol={closeSymbol}>\n            {children.map((c, i) => (\n                <ApplyTemplate key={i} p={0} expr={c} />\n            ))}\n        </mfenced>\n    );\n};\n\nexport const Intersperse = ({ expr: children, useBrackets, priority, symbol, path, onClick, opPath, selected }) => {\n    return (\n        <mjx-mrow style={{ backgroundColor: selected ? 'red' : 'transparent' }}>\n            {useBrackets && <MathOperator>(</MathOperator>}\n            {children.reduce((a, v, i) => {\n                i &&\n                    a.push(\n                        <MathOperator key={`o-${i}`} path={`${path}.[op-${symbol(v)}].0`}>\n                            {symbol(v)}\n                        </MathOperator>\n                    );\n                v &&\n                    a.push(\n                        <ApplyTemplate\n                            key={`a-${i}`}\n                            priority={priority}\n                            expr={v}\n                            path={`${path}.[op-${opPath}].${v.idx}`}\n                            onClick={onClick}\n                        />\n                    );\n                return a;\n            }, [])}\n            {useBrackets && <MathOperator>)</MathOperator>}\n        </mjx-mrow>\n    );\n};\n\nexport const Binary = ({ expr: operands, newPriority, oldPriority, symbol, path, onClick, opPath, selected }) => {\n    return (\n        <Intersperse\n            useBrackets={\n                newPriority < oldPriority || (newPriority === oldPriority && symbol() === '-')\n            }\n            priority={newPriority}\n            symbol={symbol}\n            expr={operands}\n            path={path}\n            onClick={onClick}\n            opPath={opPath}\n            selected={selected}\n        />\n    );\n};\n","import React from 'react';\nimport Power from './Power';\nimport Root from './Root';\nimport Addition from './Addition';\nimport Subtraction from './Subtraction';\nimport Multiplication from './Multiplication';\nimport Division from './Division';\nimport Equation from './Equation';\n\nimport ApplyTemplate from './ApplyTemplate';\nimport MathOperator from './MathOperator';\nimport { MF } from './Generic';\n\nconst Templates = {\n    eq: Equation,\n    divide: Division,\n    times: Multiplication,\n    minus: Subtraction,\n    plus: Addition,\n    root: Root,\n    power: Power,\n};\n\nconst Apply = ({ expr, priority, path, onClick }) => {\n    var first = null;\n    var operands = [],\n        bvars = [],\n        params = [];\n    expr.forEach((c) => {\n        if (typeof c !== 'string') {\n            const nm = c.type;\n            if (nm === 'bvar') {\n                bvars.push(c);\n            } else if (\n                nm === 'condition' ||\n                nm === 'degree' ||\n                nm === 'logbase' ||\n                nm === 'lowlimit' ||\n                nm === 'uplimit' ||\n                (nm === 'interval' && !operands.length) ||\n                nm === 'domainofapplication'\n            ) {\n                params.push(c);\n            } else if (first === null) {\n                first = c;\n            } else {\n                operands.push(c);\n            }\n        }\n    });\n    if (first) {\n        var nm = first.type;\n        // const { children } = first;\n        nm = nm === 'csymbol' ? first.textContent : nm;\n        const C = Templates[nm];\n        if (C) {\n            //ctopTapply[nm](target, node, first, operands, bvars, params, level);\n            if (nm === 'minus') {\n                console.log('minus', operands, expr);\n            }\n            return (\n                <C\n                    priority={priority}\n                    params={params}\n                    expr={operands}\n                    path={`${path}`}\n                    onClick={onClick}\n                />\n            );\n        } else {\n            return (\n                <mjx-mrow>\n                    {expr ? <ApplyTemplate p={0} expr={{ first }} /> : <mjx-mi>{nm}</mjx-mi>}\n                    <MathOperator>{'\\u2061'}</MathOperator>\n                    <MF openSymbol='(' closeSymbol=')' expr={operands} />\n                </mjx-mrow>\n            );\n        }\n    } else {\n        return <mjx-mrow />;\n    }\n};\n\nexport default Apply;","import React, { useContext } from 'react';\nimport { Intersperse } from './Generic';\nimport MathContext from './MathContext';\n\nconst Equation = ({ expr: operands, priority, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    const isSelected = path === ctx.selectedPath;\n    console.log('Equation path', path);\n    // reorder operands\n    // if more than 2: split into multiple equations\n    return (\n        <Intersperse\n            useBrackets={priority > 1}\n            level={priority}\n            symbol={() => '='}\n            expr={operands}\n            path={path}\n            onClick={onClick}\n            opPath='='\n            selected={isSelected}\n        />\n    );\n};\n\nexport default Equation;","import React, { useContext } from 'react';\nimport ApplyTemplate from './ApplyTemplate';\nimport MathContext from './MathContext';\n\n// try if you can find if denominator is a factor of numerator\n\nconst Division = ({ expr: operands, priority, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    console.log('Division path', path);\n    const isSelected = path === ctx.selectedPath;    \n    const [numerator, denominator] = operands;\n    return (\n        <mjx-mfrac space='4' style={{ backgroundColor: isSelected ? 'red' : 'transparent' }}>\n            <mjx-frac type='d'>\n                <mjx-num>\n                    <mjx-nstrut />\n                    <ApplyTemplate\n                        priority={priority}\n                        expr={numerator}\n                        path={`${path}.[div].${numerator.idx}`}\n                        onClick={onClick}\n                    />\n                </mjx-num>\n                <mjx-dbox>\n                    <mjx-dtable>\n                        <mjx-line type='d' />\n                        <mjx-row>\n                            <mjx-den>\n                                <mjx-dstrut />\n                                <ApplyTemplate\n                                    priority={priority}\n                                    expr={denominator}\n                                    path={`${path}.[div].${denominator.idx}`}\n                                    onClick={onClick}\n                                />\n                            </mjx-den>\n                        </mjx-row>\n                    </mjx-dtable>\n                </mjx-dbox>\n            </mjx-frac>\n        </mjx-mfrac>\n    );\n};\n\nexport default Division;","import React, { useContext } from 'react';\nimport { Intersperse } from './Generic';\nimport MathContext from './MathContext';\n\n\nconst Refactor_Simplify = (input) => {\n    const [operator, ...children] = input.children;\n    const noidx = children.map(x => { const y = JSON.parse(JSON.stringify(x)); delete y.idx; return y });\n    const chk = JSON.stringify(noidx[0]);\n    if (noidx.every(x => JSON.stringify(x) === chk)) {\n        const rpt = JSON.parse(JSON.stringify(children[0]));\n        rpt.idx = 2;\n        const onew = {\n            type: 'apply',\n            idx: input.idx,\n            children: [\n                {\n                    type: 'times'\n                },\n                {\n                    type: 'cn',\n                    attributes: { type: 'integer' },\n                    children: [noidx.length.toString()],\n                    idx: 1\n                },\n                rpt\n            ]\n        }\n        return onew;\n    } else if (noidx.some(x => x.type === 'apply' && x.children[0].type === 'plus')) {\n        // combine plus with plus\n    } else if (false) {\n        // combine terms with same xyz powers\n    }\n    return input;\n};\n\nconst Multiplication = ({ expr: operands, priority, path }) => {\n    const ctx = useContext(MathContext);\n    const isSelected = ctx.selectedPath === path;\n    return (\n        <Intersperse\n            useBrackets={priority > 3}\n            priority={3}\n            symbol={(o) => (o.type === 'cn' ? '\\u00D7' : '\\u2062')}\n            expr={operands}\n            path={path}\n            onClick={ctx.onClick}\n            opPath='*'\n            selected={isSelected}\n        />\n    );\n};\n\nexport default Multiplication;","import React, { useContext } from 'react';\nimport { Binary } from './Generic';\nimport MathContext from './MathContext';\n\nconst Subtraction = ({ expr: operands, priority, path, onClick }) => {\n    const ctx = useContext(MathContext);\n    const isSelected = ctx.selectedPath === path;\n    console.log('Subtraction', operands);\n    const cnt = operands.length;\n    const newPriority = cnt === 1 ? 5 : 2;\n    return (\n        <Binary\n            newPriority={newPriority}\n            oldPriority={priority}\n            symbol={() => '\\u2212'}\n            expr={cnt === 1 ? [undefined, operands[0]] : operands}\n            path={path}\n            onClick={onClick}\n            opPath='-'\n            selected={isSelected}\n        />\n    );\n};\n\nexport default Subtraction;","import React, { useContext, useEffect } from 'react';\nimport ContentNumber from './ContentNumber';\nimport ContentIdentifier from './ContentIdentifier'\nimport Apply from './Apply';\nimport MathContext from './MathContext';\n\nconst Templates = {\n    apply: Apply,\n    ci: ContentIdentifier,\n    cn: ContentNumber,\n};\n\nconst Refactor_Split = (input) => {\n    if (input.type === 'apply' && input.children) {\n        if (input.children[0].type === 'times' && input.children[1].type === 'cn' && input.children[1].attributes?.type === 'integer') {\n            const cnt = parseInt(input.children[1].children[0]);\n            const idx = input.idx;\n            if (cnt < 10) {\n                input.children.splice(1, 1);\n                input.children = input.children.map((x, i) => { x.idx = i; return x });\n                let rpt = input;\n                if (input.children.length === 2) {\n                    rpt = input.children[1];\n                }\n                const newo = {\n                    type: 'apply',\n                    idx,\n                    children: [\n                        {\n                            type: 'plus',\n                            idx: 0\n                        },\n                        ...Array(cnt).fill().map((x, i) => ({ ...JSON.parse(JSON.stringify(rpt)), idx: i+1 }))\n                    ]\n                }\n                return newo;\n            }\n        }\n        if (input.children[0].type === 'power' && input.children[2].type === 'cn' && input.children[2].attributes?.type === 'integer') {\n            const cnt = parseInt(input.children[2].children[0]);\n            const idx = input.idx;\n            if (cnt < 10) {\n                const rpt = input.children[1];\n                const newo = {\n                    type: 'apply',\n                    idx,\n                    children: [\n                        {\n                            type: 'times',\n                            idx: 0\n                        },\n                        ...Array(cnt).fill().map((x, i) => ({ ...JSON.parse(JSON.stringify(rpt)), idx: i+1 }))\n                    ]\n                }   \n                return newo;             \n            }\n        }\n    }\n    return input;  \n}\n\nconst ApplyTemplate = React.forwardRef(({ expr: n, priority, path, onClick, ...rest }, ref) => {\n    if (!n) {\n        return null;\n    }    \n    const ctx = useContext(MathContext);\n    const registerActions = ctx.registerActions;\n    const unregisterActions = ctx.unregisterActions;   \n    console.log('AT', ctx)     \n    useEffect(() => {\n        const actions = { \n            '|': Refactor_Split\n        };\n        registerActions(path, actions);\n        return () => unregisterActions(path, actions);\n    }, [registerActions, unregisterActions, path]);\n    if (typeof n !== 'string') {\n        if (!Array.isArray(n)) {\n            const tp = n.type;\n            const C = Templates[tp];\n            if (C) {\n                return (\n                    <C\n                        expr={n.children}\n                        priority={priority}\n                        ref={ref}\n                        path={`${path}`}\n                        onClick={onClick}\n                        {...(n.attributes ? n.attributes : undefined)}\n                        {...rest}\n                    />\n                );\n            } else if (n.children && n.children.length === 0) {\n                return <mjx-mi>{tp}</mjx-mi>;\n            } else {\n                return (\n                    <div>\n                        what now {tp} {JSON.stringify(n)}\n                    </div>\n                );\n            }\n        } else {\n            return n.map((c, i) => (\n                <ApplyTemplate key={i} priority={priority} expr={c} path={`${path}.${c.idx}`} onClick={onClick} />\n            ));\n        }\n    } else {\n        return n;\n    }\n});\n\nexport default ApplyTemplate;","import React, { useCallback, useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types'; // ES6\nimport ReactDOMServer from 'react-dom/server';\nimport { get, set } from 'object-path-immutable';\nimport MathContext from './MathML/MathContext';\nimport { one, zero } from '../utils/mathconsts';\nimport ApplyTemplate from './MathML/ApplyTemplate';\n\nconst XmlToTree = (xml, ctx) => {\n    if (xml.nodeType === 1) {\n        const el = {\n            type: xml.localName,\n        };\n        ctx.children = ctx.children || [];\n        ctx.children.push(el);\n        el.idx = ctx.children.length - 1;\n        if (xml.attributes.length > 0) {\n            console.log('attributes', xml.attributes);\n            el.attributes = Object.assign({}, ...Array.from(xml.attributes, ({ name, value }) => ({ [name]: value })));\n        }\n        if (xml.childNodes) {\n            xml.childNodes.forEach((x) => {\n                XmlToTree(x, el);\n            });\n        }\n    } else if (xml.nodeType === 3) {\n        ctx.children = ctx.children || [];\n        ctx.children.push(xml.textContent);\n    } else {\n        console.log('not found!', xml);\n    }\n};\n\nconst getPath = (mathExpr, path) => {\n    path = path\n        .split(/\\[[^\\]]+\\]/g)\n        .join('children')\n        .substr(5);    \n    return get(mathExpr, path);\n}\n\nconst setPath = (mathExpr, path, o) => {\n    path = path\n        .split(/\\[[^\\]]+\\]/g)\n        .join('children')\n        .substr(5);    \n    return set(mathExpr, path, o);\n}\n\nlet mathmlid = 1;\nconst actions = {};\n\nconst getRegisterActions = id => (path, acts) => {\n    actions[id] = actions[id] || {}; \n    actions[id][path] = actions[id][path] || {}; \n    actions[id][path] = { ...actions[id][path], ...acts };\n}\n\nconst getUnregisterActions = id => (path, acts) => {\n    Object.keys(acts).forEach(a => {\n        delete actions[id][path][a];\n    });\n}\n\nconst MathML = ({ children }) => {\n    const [id,] = useState((mathmlid++).toString());\n    const [mathExpr, setMathExpr] = useState({});\n    const [selectedPath, setSelectedPath] = useState('');\n    const [ctx, setCtx] = useState(MathContext.default);\n    const math = React.Children.only(children);\n\n    useEffect(() => {\n        const convert = () => {\n            const str = ReactDOMServer.renderToString(children);\n            const prs = new DOMParser();\n            let eqDoc = prs.parseFromString(str, 'text/xml');\n            eqDoc = eqDoc.querySelector('math');\n            const root = {\n                type: 'root',\n            };\n            eqDoc.childNodes.forEach((x) => XmlToTree(x, root));\n            setMathExpr(root.children);\n            console.log('matchExpr', root.children);\n        };\n        convert();\n    }, [children]);\n\n    const partClick = (path) => {\n        console.log('onClick', path)\n        setSelectedPath(path);\n    };\n\n    const partClick2 = useCallback((path) => {\n        console.log('onClick', path)\n        setSelectedPath(path);\n    }, [setSelectedPath]);\n\n    const registerActions = useCallback(getRegisterActions(id), [id]);\n    const unregisterActions = useCallback(getUnregisterActions(id), [id]);\n\n    useEffect(() => {\n        setCtx({\n            onClick: partClick2,\n            selectedPath,\n            registerActions: registerActions,\n            unregisterActions: unregisterActions\n        });\n        console.log('CTX SET')\n    }, [id, partClick2, selectedPath, registerActions, unregisterActions]);\n\n    return (\n        <div tabIndex=\"0\" onKeyDown={(e) => {\n            console.log(actions[id][selectedPath])\n            if (actions[id], actions[id][selectedPath] && actions[id][selectedPath][e.key]) {\n                console.log('ACTIONS', actions[id], selectedPath, actions[id][selectedPath]);\n                let o = getPath(mathExpr, selectedPath);\n                o = actions[id][selectedPath][e.key](o);\n                if (o) {\n                    setMathExpr(setPath(mathExpr, selectedPath, o)); \n                }               \n            } else if (e.keyCode === 27) {\n                let path = selectedPath\n                    .split('.')\n                    .slice(0, -2)\n                    .join('.');\n                setSelectedPath(path);\n            } else if (e.keyCode === 39) {\n                let path = selectedPath\n                    .split(/\\[[^\\]]+\\]/g)\n                    .join('children')\n                    .substr(5)\n                    .split('.');\n                const next = parseInt(path[path.length-1]) + 1;\n                path = path.slice(0, -1).join('.');\n                const o = get(mathExpr, path);\n                //console.log(JSON.stringify(o), 'NEXT', next);\n                console.log(selectedPath.split('.').slice(0, -1).join('.') + '.'+ next);\n                console.log(o);\n                if (o.some(x => x.idx === next)) {\n                    setSelectedPath(selectedPath.split('.').slice(0, -1).join('.') + '.'+ next);\n                };\n            } else if (e.keyCode === 37) {\n                let path = selectedPath\n                    .split(/\\[[^\\]]+\\]/g)\n                    .join('children')\n                    .substr(5)\n                    .split('.');\n                const next = parseInt(path[path.length-1]) - 1;\n                if (next > 0) {\n                    path = path.slice(0, -1).join('.');\n                    const o = get(mathExpr, path);\n                    //console.log(JSON.stringify(o), 'NEXT', next);\n                    if (o.some(x => x.idx === next)) {\n                        setSelectedPath(selectedPath.split('.').slice(0, -1).join('.') + '.'+ next);\n                    };\n                }\n            } else if (e.key === '+') {\n                let o = getPath(mathExpr, selectedPath);\n                if (o.type === 'apply' || o.type === 'ci') {\n                    let idx = o.idx;\n                    o = set(o, 'idx', 1);\n                    const add = {\n                        type: \"apply\",\n                        idx: idx,\n                        children: [\n                            { type: \"plus\", idx: 0 },\n                            o,\n                            { ...zero, idx: 2 }\n                        ]\n                    }\n                    setMathExpr(setPath(mathExpr, selectedPath, add));                     \n                }\n            } else if (e.key === '^') {\n                let o = getPath(mathExpr, selectedPath);\n                console.log('split', selectedPath)\n                let idx = o.idx;\n                o = set(o, 'idx', 1);\n                const pwr = {\n                    type: \"apply\",\n                    idx: idx,\n                    children: [\n                        { type: \"power\", idx: 0 },\n                        o,\n                        { ...one, idx: 2 }\n                    ]\n                }\n                setMathExpr(setPath(mathExpr, selectedPath, pwr));\n            } else if (e.key === '*') {\n                let o = getPath(mathExpr, selectedPath);\n                let idx = o.idx;\n                o = set(o, 'idx', 1);\n                const tms = {\n                    type: \"apply\",\n                    idx: idx,\n                    children: [\n                        { type: \"times\", idx: 0 },\n                        o,\n                        { ...one, idx: 2 }\n                    ]\n                }\n                setMathExpr(setPath(mathExpr, selectedPath, tms));\n            } else if (e.keyCode === 83) {\n                // simplify per step\n                // reduce: T / 1 => T\n                // reduce: T * 1 => T\n                // reduce: T ^ 1 => T\n                // reduce: T ^ 0 => 1\n                // reduce: (T1 + T2) + T3 => T1 + T2 + T3\n                // reduce: R => C1/C2 (ie 0.5 => 1/2)\n                // reduce: C1 + C2 = C3\n                // reduce (C1+(C2/C3)) + (C4+(C5/C6)) = C7+(C8/C9) (combine rationals) \n                // maybe: T1 - T2 = T1 + -T2 (display is same)\n                // reduce: (C * Tx) / Tx => C\n                // reduce: C * Tx^n / Tx^m => C * Tx^(n-m)\n                // reduce: C1.Tx + C2.Tx => (C1+C2).Tx\n                // solve: 2.x^2 + 2.x => (2.x) . (x + 1)\n                // style: 2.x + 2 = 2.(x + 1)\n                // style: x . 42 . z => 42 . x . z\n                // style: (42 . x) / y => 42 . (x / y)\n                // style: T1 + C = T2 => T2 - T1 = C\n            } else {\n                console.log('KEYCODE', e.key);\n                console.log(e);\n            }\n        }}>\n            <mjx-container jax='CHTML' display='true'>\n                <mjx-math display='true' class='MJX-TEX'>\n                    <MathContext.Provider value={ctx}>\n                        <ApplyTemplate onClick={partClick} expr={mathExpr} priotiry={0} path='math' />\n                    </MathContext.Provider>\n                </mjx-math>\n            </mjx-container>\n            <div>selectedPath: {selectedPath}</div>\n            <button\n                onClick={() => {\n                    let path = selectedPath\n                        .split(/\\[[^\\]]+\\]/g)\n                        .join('children')\n                        .substr(5);\n\n                    //let me = JSON.parse(JSON.stringify(mathExpr));\n                    path = path.split('.').slice(0, -1).join('.');\n                    const o = get(mathExpr, path);\n                    const newarr = [o[0], ...o.slice(1).reverse()];\n                    newarr.forEach((o, i) => o.idx = i);\n                    setMathExpr(set(mathExpr, path, newarr));\n                    //alert(path + JSON.stringify(o));\n                    //const ar = mathExpr[0].children;\n                    //mathExpr[0].children = [ ar[0], ar[2], ar[1] ];\n                    //setMathExpr([...mathExpr]);\n                }}\n            >\n                SWAP sel\n            </button>\n            <button\n                onClick={() => {\n                    let ar = mathExpr[0].children;\n                    mathExpr[0] = {\n                        type: 'apply',\n                        children: [ar[0], ar[2], ar[1]],\n                    };\n                    setMathExpr([...mathExpr]);\n                }}\n            >\n                SWAP div\n            </button>\n        </div>\n    );\n};\n\nMathML.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n\nexport default MathML;\n","import React from 'react';\nimport './App.css';\nimport './mathml.css';\nimport MathML from './components/MathML';\n\n/*\n  <cn>12</cn>\n\n  action: split => also with plus (brackets!)\n\n    <apply>\n      <times/>\n      <cn>3</cn>\n      <cn>4</cn>\n    </apply>  \n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>         \n*/\n\n/*\n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>  \n\n    action: simplify\n    <cn>12</cn>\n*/\n\n/*\n    <apply>\n      <times/>\n      <cn>2</cn>\n      <cn>6</cn>\n    </apply>  \n\n    action: reorder\n    <apply>\n      <times/>\n      <cn>6</cn>\n      <cn>2</cn>\n    </apply>  \n*/\n\n/*\n<apply>\n  <times/>\n  <cn>2</cn>\n  <ci>a</ci>\n</apply>\n*/\n\n/*\n  collect same var terms i.e x^2\n  equality both sides by factor\n  equality multiply both sides by factor\n  split equation with ± in to with or\n  square both sides\n  convert division to multiplication\n  combine factors to one\n  divide num en den by factor (if var then add and var != 0)\n  extract factor (term + term)\n  simplyfy division by 1\n  make denominator of two divisions same by using a factor of one of the denominators\n  subtract term from both sides of equation so that after simplify one term less\n  make dirivative or make intergral\n*/\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Play with mathematical formula\n        </p>\n      <MathML>\n          <math display=\"block\">\n            <apply>\n              <eq/>\n              <ci>x</ci>\n              <apply>\n                <divide/>\n                <apply>\n                  <plus/>\n                  <apply>\n                    <minus/>\n                    <ci>b</ci>\n                  </apply>\n                  <apply>\n                    <root>\n                      <degree>2</degree>\n                    </root>\n                    <apply>\n                      <minus/>\n                      <apply>\n                        <power/>\n                        <ci>b</ci>\n                        <cn type=\"integer\">2</cn>\n                      </apply>\n                      <apply>\n                        <times/>\n                        <cn type=\"integer\">4</cn>\n                        <ci>a</ci>\n                        <ci>c</ci>\n                      </apply>\n                    </apply>\n                  </apply>\n                </apply>\n                <apply>\n                  <times/>\n                  <cn type=\"rational\">2<sep/>3</cn>\n                  <ci>a</ci>\n                </apply>\n              </apply>\n            </apply>\n          </math>\n        </MathML>\n        <MathML>\n          <math>\n            <apply>\n              <eq/>\n              <ci>x</ci>\n              <cn type=\"integer\">0</cn>\n            </apply>\n          </math>\n        </MathML>        \n        <pre style={{ textAlign: 'left' }}>{`\n          SWAP sel is currently broken\n\n          Selecting parts\n          - red is selected\n          - mouse click to select numbers or symbols\n\n          Navigation\n          - ESC to select parent of current selection\n          - RIGHT ARROW select next child of current selection\n          - LEFT ARROW select\n\n          Changing math\n          - +/- on number (rational or natural)\n\n          Refactor\n          - ^ on natural number or symbol raise to power 1\n          - / on number divide by 1\n          - + on non number add 0\n          - * multiply by 1`}\n        </pre>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}